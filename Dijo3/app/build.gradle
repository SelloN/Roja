apply plugin: 'com.android.application'

android {
    compileSdkVersion 23
    buildToolsVersion "23.0.0"

    defaultConfig {
        applicationId "com.natech.roja"
        minSdkVersion 15
        targetSdkVersion 23
        versionCode 20
        versionName "2.0.4"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    compile fileTree(dir: 'libs', include: ['*.jar'])
    //compile fileTree(dir: "$buildDir/native-libs", include: 'native-libs.jar')
    //compile files('libs/zbar.jar')
    compile 'com.android.support:appcompat-v7:23.1.0-alpha1'
    //compile 'com.android.support:support-v4:23.1.0-alpha1'
    compile 'com.android.support:design:23.1.0'
    compile 'com.android.support:recyclerview-v7:23.1.0'
    compile 'com.android.support:palette-v7:23.1.0'
    compile 'com.android.support:cardview-v7:23.1.0'
    compile 'com.squareup.picasso:picasso:2.5.2'
    compile 'com.melnykov:floatingactionbutton:1.3.0'
    compile 'com.getbase:floatingactionbutton:1.9.1'
    compile 'com.google.android.gms:play-services-gcm:7.5.0'
    compile 'com.google.android.gms:play-services-location:7.5.0'
    compile 'com.google.android.gms:play-services-analytics:7.5.0'
    compile 'de.hdodenhof:circleimageview:1.3.0'
    compile 'com.github.traex.rippleeffect:library:1.3'
    compile 'com.nineoldandroids:library:2.4.0'
    compile 'com.daimajia.slider:library:1.1.5@aar'
    compile 'com.daimajia.androidanimations:library:1.1.3@aar'
    compile 'com.github.amlcurran.showcaseview:library:5.0.0'
    compile 'com.facebook.android:facebook-android-sdk:4.6.0'
    compile 'me.dm7.barcodescanner:zxing:1.8.4'
    //compile 'jp.wasabeef:blurry:1.0.5'
    compile project(path: ':backend', configuration: 'android-endpoints')

}
/*
task copyJniLibs(type: Copy) {
    from 'libs/armeabi'
    into new File(buildDir, 'native-libs')

}

tasks.withType(JavaCompile) {
    compileTask -> //noinspection GroovyAssignabilityCheck
        compileTask.dependsOn(copyJniLibs)
}*/

//clean.dependsOn 'cleanCopyNativeLibs'
